:root {
    --platinum: #E9EBEA;
    --arctic-lime: #D2FF00;
    --bitter-lime: #B3F700;
    --lime-green: #00C41F;
    --eerie-black: #13181B;
    --silver: #C4C4C4;

    --text-size: 1.3rem;
}

/*The use of this class and colors stored in variables ensures our ability to switch between color themes in the future.*/
.dark-theme {
    --bg-color: var(--eerie-black);
    --nav-bg-color: var(--bitter-lime);
    --text: var(--platinum);
    --text-alternative: var(--eerie-black);
}

/* This catch-all at the beginning removes all default margin and padding spacings to allow for maximum customizability later. */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: var(--bg-color);
    color: var(--text);
    height: 100vh;

    /* using flexbox here in the column direction allows us to use the flex-grow attribute on the main element to enforce proper use of space. This will be especially helpful if/when we wish to implement a footer that is stickied to the bottom of the visible screen. */
    display: flex;
    flex-direction: column;
}

nav {
    /* using flexbox to align the navbar items in a horizontal line with even spaces inbetween */
    display: flex;
    justify-content: space-between;
    align-items: center;
    
    background-color: var(--nav-bg-color);
    color: var(--text-alternative);
    border-radius: 15px;
    padding: 5px;
    margin: 10px;
}

main {
    /* this flex-grow ensures that the main element uses up all available space in the body. This way, if in the future we add a footer element to the home.html body element, it will be positioned at the bottom instead of just underneath the last element inside the main element. */
    flex-grow: 1;
    
    font-size: var(--text-size);
    padding: 30px;

    /* this use of flexbox allows us to center all the headers, paragraphs and forms. */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
}